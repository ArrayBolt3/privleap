#!/bin/bash

## Copyright (C) 2025 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

if [ -f /usr/libexec/helper-scripts/pre.bsh ]; then
   source /usr/libexec/helper-scripts/pre.bsh
fi

set -e

true "
#####################################################################
## INFO: BEGIN: $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME $@
#####################################################################
"

case "$1" in
   configure|triggered)
      ## We need to restart privleapd in order for it to pick up new
      ## configuration data. However, doing this will also result in all comm
      ## sockets for users that aren't configured as persistent users being
      ## destroyed. We need to recreate these after restart in order to keep
      ## from needing all active users to log out and log in again.
      ##
      ## Due to a lag between when a user logs out and when user@.service
      ## gets around to destroying their corresponding comm socket, this has a
      ## very slight chance of creating a socket that was just destroyed by
      ## user@.service. This would allow anything that can execute commands as
      ## the now logged-out user to run leaprun actions that the user in
      ## question is authorized to run. This is not expected to have any
      ## significant security impact since users shouldn't be permitted to run
      ## sensitive operations via leaprun.
      active_comm_users_list=()

      if [ -d '/run/privleapd/comm' ]; then
         for active_comm_users_item in '/run/privleapd/comm'/*; do
            active_comm_users_list+=( "$(basename "${active_comm_users_item}")" )
         done
      fi

      ## Causes lintian warning:
      ## W: privleap: maintainer-script-calls-systemctl
      #systemctl restart privleapd.service
      # Give privleapd some time to start
      #sleep 1

      # Recreate any non-persistent user sockets that previously existed.
      for active_comm_users_item in "${active_comm_users_list[@]}"; do
         if ! [ -e "/run/privleapd/comm/${active_comm_users_item}" ]; then
            leapctl --create "${active_comm_users_item}" || true
         fi
      done

   ;;

   abort-upgrade|abort-remove|abort-deconfigure)
   ;;

   *)
      echo "$DPKG_MAINTSCRIPT_NAME called with unknown argument \`$1'" >&2
      exit 1
   ;;
esac

true "INFO: debhelper beginning here."

#DEBHELPER#

true "INFO: Done with debhelper."

true "
#####################################################################
## INFO: END  : $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME $@
#####################################################################
"

## Explicitly "exit 0", so eventually trapped errors can be ignored.
exit 0
