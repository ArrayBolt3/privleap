#!/bin/bash

## Copyright (C) 2025 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

if [ -f /usr/libexec/helper-scripts/pre.bsh ]; then
   source /usr/libexec/helper-scripts/pre.bsh
fi

set -e

true "
#####################################################################
## INFO: BEGIN: $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME $@
#####################################################################
"

make_privleapd_comm_sockets_first_time_maybe() {
   if [ -f "/var/lib/privleap/do_once/${FUNCNAME}_version_1" ]; then
      return 0
   fi
   mkdir --parents "/var/lib/privleap/do_once"

   ## If this is the first installation, we need to start the leapctl
   ## services corresponding to each actively logged-in user, otherwise
   ## privleap won't work until the next login (or potentially until the
   ## next reboot depending on the user's setup).
   ##
   ## deb-systemd-invoke doesn't work here because the leapctl instance
   ## units are considered "disabled" by systemd even though they start
   ## properly. This fact means deb-systemd-invoke will just ignore the
   ## start commands.
   ## debhelper checks for folder '/run/systemd/system' existence.
   ## So we should do.
   if [ -d /run/systemd/system ]; then
      if systemctl --no-pager --no-block status privleapd.service  &>/dev/null; then
      source /usr/libexec/helper-scripts/accountctl.sh
      for user in $(who | awk '{ print $1 }' | sort -u); do
         target_uid="$(get_entry "${user}" passwd uid)"
         ## debhelper uses '|| true' for systemctl start action so we should too.
         systemctl start "leapctl@${target_uid}.service" || true
      done
   fi

   touch "/var/lib/privleap/do_once/${FUNCNAME}_version_1"
}

case "$1" in
   configure)
      deb-systemd-helper enable privleapd.service
      deb-systemd-helper enable leapctl@.service
   ;;

   abort-upgrade|abort-remove|abort-deconfigure)
   ;;

   triggered)
      ## debhelper seems to not reliably start the service after installation,
      ## so we have to start it explicitly.
      deb-systemd-invoke restart privleapd.service
      make_privleapd_comm_sockets_first_time_maybe
   ;;

   *)
      echo "$DPKG_MAINTSCRIPT_NAME called with unknown argument \`$1'" >&2
      exit 1
   ;;
esac

true "INFO: debhelper beginning here."

#DEBHELPER#

true "INFO: Done with debhelper."

true "
#####################################################################
## INFO: END  : $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME $@
#####################################################################
"

## Explicitly "exit 0", so eventually trapped errors can be ignored.
exit 0
