.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "PRIVLEAP\-CONF\.D" "5" "January 2020" "privleap" "privleap Manual"
.SH "NAME"
\fBprivleap\-conf\.d\fR \- privleap configuration files
.SH "SYNOPSIS"
\fB/etc/privleap/conf\.d/*\.conf\fR
.SH "DESCRIPTION"
These configuration files define the actions that can be run via privleapd, and control how privleapd interacts with user accounts on the local system\.
.SH "FILE NAMES"
Each configuration file must end in a \fB\.conf\fR extension, and the filename must consist only of the ASCII 7\-bit characters a\-z, A\-Z, 0\-9, underscore (\fB_\fR), hyphen (\fB\-\fR), and period (\fB\.\fR)\. Files that do not adhere to this requirement are silently ignored\. Symlinks to files are followed so long as the symlink name adheres to the filename requirements\. (The file used as the symlink's target does not have to follow the filename requirements, since its filename isn't used in any meaningful way by privleap\.)
.SH "SYNTAX"
Each config file consists of one or more headers, each followed by zero or more lines of key/value pairs\.
.P
Headers are formatted as \fB[header]\fR\. Headers may only contain the ASCII 7\-bit characters a\-z, A\-Z, 0\-9, underscore, hyphen, and period\.
.P
Each key/value pair has the key and value separated by an equals sign (\fB=\fR)\. No spaces are to be inserted between the key or value and the equals sign, the space will become part of the key or value if this is done\.
.P
Lines starting with zero or more whitespace characters followed immediately by a hash symbol (\fB#\fR) are comments\.
.P
Blank lines are ignored\.
.SH "OPTIONS"
The following headers are recognized:
.TP
\fB[allowed\-users]\fR
Description: Specifies one or more users that shall be permitted to communicate with privleapd\. Users that are specified as "allowed" will have communication sockets created for them when a privileged privleap client requests privleapd to create those sockets\. If a user is not specified as "allowed", privleapd will refuse to create a communication socket for that user\. The \fB[allowed\-users]\fR section can be specified more than once in privleap's configuration\. The contents of each section will be stacked on top of each other\.
.IP
Keys:
.IP
\fBUser\fR: Specifies a user to mark as "allowed"\. This key may appear multiple times in the section\. The same user can be specified multiple times\. If the specified user does not exist, the user is skipped over\.
.TP
\fB[persistent\-users]\fR
Description: Specifies one or more users that shall always have open communication sockets for communicating with privleapd\. Users that are specified as "persistent" are automatically considered "allowed" as well\. The communication sockets for persistent users cannot be destroyed via a request from a privileged privleap client\. The \fB[persistent\-users]\fR section can be specified more than once in privleap's configuration\. The contents of each section will be stacked on top of each other\.
.IP
Keys:
.IP
\fBUser\fR: Specifies a user to mark as "persistent"\. This key may appear multiple times in the section\. The same user can be specified multiple times\. It is an error to specify a non\-existent user as persistent\.
.TP
\fB[action:*]\fR
Description: Action headers define an action that can be run via privleapd\. Headers that start with \fBaction:\fR are interpreted as action headers\. The text after the \fB:\fR is interpreted as the action name\. Each action header must appear only once in privleap's configuration, attempting to define two actions with the same header is an error\.
.IP
Keys:
.IP
\fBCommand\fR: A single line of Bash code to run when this action is triggered\. This code will be passed verbatim to \fB/usr/bin/bash \-c\fR\.
.IP
\fBAuthorizedUsers\fR: A comma\-separated list of users that are permitted to run this action\. If a user is specified that does not exit, it will be skipped over\.
.IP
\fBAuthorizedGroups\fR: A comma\-separated list of groups who's users are permitted to run this action\. If a group is specified that does not exist, it will be skipped over\.
.IP
\fBTargetUser\fR: The user the action will run as\. Defaults to 'root'\. It is an error to specify a nonexistent user here\.
.IP
\fBTargetGroup\fR: The group the action will run as\. Defaults to 'root'\. It is an error to specify a nonexistent group here\.
.SH "NOTES"
privleapd must be restarted for any changes to the configuration directory to take effect\.
.P
If a configuration file contains an error, privleapd will fail to start\.
.P
At least one of \fBAuthorizedUsers\fR or \fBAuthorizedGroups\fR must be defined for each action, with at least one user or group specified\. An action with no authorized users or groups configured is considered invalid\.
.SH "EXAMPLE"
The following configuration file defines two actions, named \fBecho\-hello\fR and \fBshow\-messagebus\-id\-info\fR\. It also specifies that user \fBuser\fR is permitted to communicate with privleapd, and configures \fBroot\fR and \fBsdwdate\fR as persistent users:
.IP "" 4
.nf
[echo\-hello]
Command=echo 'Hi!'
AuthorizedUsers=user,sysmaint

[show\-messagebus\-id\-info]
Command=id
AuthorizedGroups=sudo
TargetUser=messagebus
TargetGroup=messagebus

[allowed\-users]
User=user

[persistent\-users]
User=root
User=sdwdate
.fi
.IP "" 0
.SH "WWW"
https://github\.com/Kicksecure/privleap
.SH "AUTHOR"
This man page has been written by Aaron Rainbolt (arraybolt3@ubuntu\.com)\.
